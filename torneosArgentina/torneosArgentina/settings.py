"""
Django settings for torneosArgentina project.

Generated by 'django-admin startproject' using Django 4.2.21.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
import dj_database_url # Importa dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Usa una variable de entorno para SECRET_KEY en producción
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-tu-clave-secreta-por-defecto') # ¡IMPORTANTE: Cambia esto por una clave real en Render!

# SECURITY WARNING: don't run with debug turned on in production!
# Determina DEBUG basado en la variable de entorno RENDER
# Si la variable RENDER existe y es 'true' o '1', entonces no estamos en producción de Render.
# Si estás en Render, os.environ.get('RENDER') debería ser 'true' o similar, y DEBUG debería ser False.
# Si estás en desarrollo local (fuera de Render), RENDER no existirá, y DEBUG será True.
DEBUG = os.environ.get('RENDER') != 'true'

# Configuración de ALLOWED_HOSTS
# Para Render, toma la URL de Render. Para desarrollo local, permite 'localhost' y '127.0.0.1'.
ALLOWED_HOSTS = []
RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)
else:
    ALLOWED_HOSTS.append('localhost')
    ALLOWED_HOSTS.append('127.0.0.1')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Torneos', # Tu aplicación Django
    'rest_framework', # Si usas Django REST Framework
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # Para servir archivos estáticos en producción
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'torneosArgentina.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # Agregué tu carpeta global de templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'torneosArgentina.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# Configuración de la base de datos para PostgreSQL en Render
DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL', 'sqlite:///db.sqlite3'), # Fallback a SQLite para desarrollo local
        conn_max_age=600
    )
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'es-ar' # Configurado para español de Argentina

TIME_ZONE = 'America/Argentina/Buenos_Aires' # Configurado para tu zona horaria

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/ref/settings/#static-files

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles' # Directorio donde collectstatic recolectará los archivos
STATICFILES_DIRS = [
    BASE_DIR / 'Torneos' / 'static', # Agrega la carpeta static de tu app Torneos
]

# Configuración de WhiteNoise para servir archivos estáticos comprimidos
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de MEDIA_ROOT (para archivos subidos por el usuario, si los hubiera)
# Si planeas subir imágenes a través del admin, necesitarás un servicio de almacenamiento en la nube (AWS S3, Google Cloud Storage)
# Si no usas almacenamiento en la nube, estos archivos se perderán en Render.
# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'

# Configuración de CSRF_TRUSTED_ORIGINS para Render
CSRF_TRUSTED_ORIGINS = ['https://*.onrender.com']
